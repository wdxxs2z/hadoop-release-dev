#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump
    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end
    if !network
      _, network = networks.first
    end
    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end
    network.ip
  end
%>

# Setup env vars and folders for the nodemanager_ctl script
source /var/vcap/jobs/nodemanager/helpers/ctl_setup.sh 'nodemanager'
export PIDFILE=/var/vcap/sys/run/nodemanager/nodemanager.pid

mkdir -p $HADOOP_NAMENODE_ROOT
mkdir -p $LOG_DIR
mkdir -p $RUN_DIR

# Set the hostname
hostname <%=discover_external_ip %>

case $1 in

  start)

     # Create hadoop supergroup
    getent group $HADOOP_GROUP &>/dev/null || groupadd $HADOOP_GROUP

    # Create yarn user
    id $YARN_USER &>/dev/null || useradd -s /sbin/nologin -r -M $YARN_USER -G $HADOOP_GROUP

    chown --recursive $YARN_USER:$HADOOP_GROUP $LOG_DIR
    chown --recursive $YARN_USER:$HADOOP_GROUP $RUN_DIR

    if [ ! -d $YARN_LOCAL_DIR ]; then
      mkdir -p $YARN_LOCAL_DIR;
      chown -R $YARN_USER:$HADOOP_GROUP $YARN_LOCAL_DIR;
      chmod -R 755 $YARN_LOCAL_DIR;
    fi

    if [ ! -d $YARN_LOCAL_LOG_DIR ]; then
      mkdir -p $YARN_LOCAL_LOG_DIR;
      chown -R $YARN_USER:$HADOOP_GROUP $YARN_LOCAL_LOG_DIR;
      chmod -R 755 $YARN_LOCAL_LOG_DIR;
    fi
   
    # Start nodemanager
    exec chpst -u $YARN_USER:$HADOOP_GROUP $HADOOP_HOME/bin/yarn --config $YARN_CONF_DIR nodemanager \
    1>>$LOG_DIR/$JOB_NAME.stdout.log \
    2>>$LOG_DIR/$JOB_NAME.stderr.log &
 
    echo $! > $PIDFILE
    ;;

  stop)


    if [ -f $PIDFILE ]; then
      TARGET_PID=`cat $PIDFILE`
      if kill -0 $TARGET_PID > /dev/null 2>&1; then
        kill $TARGET_PID
        if kill -0 $TARGET_PID > /dev/null 2>&1; then
          echo "$JOB_NAME did not stop gracefully: killing with kill -9"
          kill -9 $TARGET_PID
        fi
      else
        echo no $JOB_NAME to stop
      fi
    else
      echo no $JOB_NAME to stop
    fi
    ;;


  *)
    echo "Usage: resourcemanager_ctl {start|stop}"

    ;;

esac
exit 0


