#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump
    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end
    if !network
      _, network = networks.first
    end
    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end
    network.ip
  end
%>

# Setup env vars and folders for the spark-master_ctl script
source /var/vcap/jobs/spark-master/helpers/ctl_setup.sh 'spark-master'

mkdir -p $LOG_DIR
mkdir -p $RUN_DIR
mkdir -p $ZOOKEEPER_DIR

# Set the hostname
hostname <%=discover_external_ip %>

case $1 in

  start)
    #pid_guard $PIDFILE $JOB_NAME

    chown --recursive vcap:vcap $SPARK_HOME
    chown --recursive vcap:vcap $LOG_DIR
    chown --recursive vcap:vcap $ZOOKEEPER_DIR

    exec chpst -u vcap:vcap $SPARK_HOME/bin/spark-class \
         org.apache.spark.deploy.master.Master \
         --ip <%= spec.address %> --port <%= p("spark.master.port") %> --webui-port $SPARK_MASTER_WEBUI_PORT \
         1>>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log &



    # store pid in $PIDFILE
    echo $! > $PIDFILE
    ;;

  stop)
    kill_and_wait $PIDFILE 

    ;;
  *)
    echo "Usage: spark-master_ctl {start|stop}"

    ;;

esac
exit 0
