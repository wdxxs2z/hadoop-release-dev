#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump
    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end
    if !network
      _, network = networks.first
    end
    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end
    network.ip
  end
%>

# Setup env vars and folders for the historyserver_ctl script
source /var/vcap/jobs/historyserver/helpers/ctl_setup.sh 'historyserver'
export PIDFILE=/var/vcap/sys/run/historyserver/historyserver.pid

mkdir -p $HADOOP_NAMENODE_ROOT
mkdir -p $LOG_DIR
mkdir -p $RUN_DIR

# Set the hostname
# hostname <%=discover_external_ip %>

case $1 in

  start)

    # Create hadoop supergroup
    getent group $HADOOP_GROUP &>/dev/null || groupadd $HADOOP_GROUP

    # Create users
    id $HDFS_USER &>/dev/null || useradd -s /sbin/nologin -r -M $HDFS_USER -G $HADOOP_GROUP
    id $YARN_USER &>/dev/null || useradd -s /sbin/nologin -r -M $YARN_USER -G $HADOOP_GROUP
    id $MAPRED_USER &>/dev/null || useradd -s /sbin/nologin -r -M $MAPRED_USER -G $HADOOP_GROUP

    chown --recursive $MAPRED_USER:$HADOOP_GROUP $LOG_DIR
    chown --recursive $MAPRED_USER:$HADOOP_GROUP $RUN_DIR
    
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -mkdir -p /mr-history/tmp
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -chmod -R 1777 /mr-history/tmp
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -mkdir -p /mr-history/done
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -chmod -R 1777 /mr-history/done
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -chown -R $MAPRED_USER:$HADOOP_GROUP /mr-history
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -mkdir -p /app-logs
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -chmod -R 1777 /app-logs
    chpst -u $HDFS_USER:$HADOOP_GROUP hadoop fs -chown $YARN_USER:$HADOOP_GROUP /app-logs

    exec chpst -u $MAPRED_USER:$HADOOP_GROUP $HADOOP_HOME/bin/mapred --config $YARN_CONF_DIR historyserver \
    1>>$LOG_DIR/$JOB_NAME.stdout.log \
    2>>$LOG_DIR/$JOB_NAME.stderr.log &

    echo $! > $PIDFILE
    ;;

  stop)


    if [ -f $PIDFILE ]; then
      TARGET_PID=`cat $PIDFILE`
      if kill -0 $TARGET_PID > /dev/null 2>&1; then
        kill $TARGET_PID
        if kill -0 $TARGET_PID > /dev/null 2>&1; then
          echo "$JOB_NAME did not stop gracefully: killing with kill -9"
          kill -9 $TARGET_PID
        fi
      else
        echo no $JOB_NAME to stop
      fi
    else
      echo no $JOB_NAME to stop
    fi
    ;;


  *)
    echo "Usage: historyserver_ctl {start|stop}"

    ;;

esac
exit 0


