#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump
    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end
    if !network
      _, network = networks.first
    end
    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end
    network.ip
  end
%>

# Setup env vars and folders for the datanode_ctl script
source /var/vcap/jobs/datanode/helpers/ctl_setup.sh 'datanode'
export PIDFILE=/var/vcap/sys/run/datanode/datanode.pid

mkdir -p $HADOOP_DATANODE_ROOT
mkdir -p $LOG_DIR
mkdir -p $RUN_DIR

# Set the hostname
hostname <%=discover_external_ip %>

case $1 in

  start)

    # Create hadoop supergroup
    getent group $HADOOP_GROUP &>/dev/null || groupadd $HADOOP_GROUP

    # Create hdfs user
    id $HDFS_USER &>/dev/null || useradd -s /sbin/nologin -r -M $HDFS_USER -G $HADOOP_GROUP

    chown --recursive $HDFS_USER:$HADOOP_GROUP $LOG_DIR
    chown --recursive $HDFS_USER:$HADOOP_GROUP $RUN_DIR

    if [ ! -d $HADOOP_DATANODE_DIR ]; then
      mkdir -p $HADOOP_DATANODE_DIR
      chown -R $HDFS_USER:$HADOOP_GROUP $HADOOP_DATANODE_DIR;
      chmod -R 750 $HADOOP_DATANODE_DIR;
    fi

    # Create domain socket path
    if [ ! -d /var/run/hdfs ]; then
      mkdir -p /var/run/hdfs
      chown -R $HDFS_USER:$HADOOP_GROUP /var/run/hdfs
    fi

    exec chpst -u $HDFS_USER:$HADOOP_GROUP $HADOOP_HOME/bin/hdfs --config $HADOOP_CONF_DIR datanode \
        1>>$LOG_DIR/$JOB_NAME.stdout.log \
        2>>$LOG_DIR/$JOB_NAME.stderr.log &


    # store pid in $PIDFILE
    echo $! > $PIDFILE
    ;;

  stop)


    if [ -f $PIDFILE ]; then
      TARGET_PID=`cat $PIDFILE`
      if kill -0 $TARGET_PID > /dev/null 2>&1; then
        kill $TARGET_PID
        if kill -0 $TARGET_PID > /dev/null 2>&1; then
          echo "$JOB_NAME did not stop gracefully: killing with kill -9"
          kill -9 $TARGET_PID
        fi
      else
        echo no $JOB_NAME to stop
      fi
    else
      echo no $JOB_NAME to stop
    fi
    ;;


  *)
    echo "Usage: datanode_ctl {start|stop}"

    ;;

esac
exit 0


